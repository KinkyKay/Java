//-------------------------------------------------------------------------------------------------------------------//
                                            SUMMARY INTRODUCTION
//-------------------------------------------------------------------------------------------------------------------//                                                

1. A computer is an electronic device that stores and processes data.

2. A computer includes both hardware and software.

3. Hardware is the physical aspect of the computer that can be touched.

4. Computer programs, known as software, are the invisible instructions that control the hardware and make it perform
   tasks.

5. Computer programming is the writing of instructions for computers to perform.

6. The central processing unit (CPU) is a  computer's brain. It retrieves instructions from memory and executes them.

7. Computers use zeros and ones because digital devices have two stable states, referred to by convention as zero and
   one.

8. A bit is a binary digit 0 or 1.

9. A byte is a sequence of 8 bits.

10. A kilobyte is about 1000 bytes, a megabyte about 1 milion bytes, a gigabyte about 1 billion bytes, and a
    terrabyte about 1000 gigabytes.

11. Memory stores data and program instructions for the CPU to execute.

12. A memory unit is an ordered sequence of bytes.

13. Memory is volatile, because information is lost when the power is turned off.

14. Programs and data are permanently stored on storage devices and are moved to memory when the computer actually
    uses them.

15. The machine language is a set of primitive instructions built into every computer.

16. Assembly language is a low-level programming language in which a mnemonic is used to represent each machine-
    language instruction.

17. High-level languages are English-like and easy to learn and program.

18. A program written in a high-level language is called a source program.

19. A compiler is a software program that translates the source program into a machine-language program.

20. The operating system (OS) is a program that manages and controls a computer's activities.

21. Java is platform independent, meaning you can write a program once and run it on any computer.

22. The Java source file name must match the public class name in the program. Java sourcecode files must end with the
    .java extension.

23. Every class is compiled into a separate bytecode file that has the same name as the class and ends with the
    .class extension.

24. To compile a Java source-code file from the command file, use the javac command.

25. To run a Java class from the command line, use the  java command.

26. Every Java program is a set of class definitions. The keyword class introduces a class definition. The contents
    of the class are included in a block.

27. A block begins with an opening brace ({) and ends with a closing brace (}).

28. Methods are contained in a class. To run a java program, the program must have a main method. The main method
    is the entry point where the program starts when it is executed.

29. Every statement in Java ends with a semicolon (;), known as the statement terminator.

30. Reserved words, or keywords, have a specific meaning to the compiler and cannot be used for other purposes in the
    program.

31. In java, comments are preceded by two slashes (//) on a line, called a line comment, or enclosed between /* and */
    on one or several lines, called a block comment or paragraph comment. Comments are ignored by the compiler.

32. Java source programs are case sensitive.

33. Programming Errors can be categorized into three types: syntax errors, runtime errors, and logic errors. Errors
    reported by a compiler are called syntax errors or compile errors. Runtime errors are errors that cause a program
    to terminate abnormally. Logic errors occur when a program does not perform the way it was intended to.

//-------------------------------------------------------------------------------------------------------------------//
                                             SUMMARY ELEMENTARY PROGRAMMING
//-------------------------------------------------------------------------------------------------------------------//

1. Identifiers are names for naming elements such as variables, constants, methods, classes, and packages in a program.

2. An identifier is a sequence of characters that consists of letters, digits, underscores(_), and dollar signs ($).
   An identifier must start with a letter or an underscore. It cannot start with a digit. An identifier cannot be a
   reserved word. An identifier can be of any length.

3. Variables are used to store data in a program. To declare a variable is to tell the compiler what type of data a
   variable can hold.

4. There are two types of import statements: specific, import and wildcard import. The specific import specifies a
   single class in the import statement. The wildcard import imports all the classes in the package.

5. In Java, the equal sign  (=) is used as the assignment operator.

6. A variable declared in a method must be assigned a value before it can be used.

7. A named constant (or simply a constant) represents permanent data that never changes.

8. A named constant is declared by using the keyword final.

9. Java provides four integer types (byte, short, int, and long) that represent integers of four different sizes.

10. Java provides two floating-point types (float and double) that represent floating-point numbers of two different
    precisions.

11. Java provides operators that perform numeric operations: + (addition), - (subtraction), * (multiplication),
    / (division), and % (remainder).

12. Integer arithmetic (/) yields an integer result.

13. The numeric operators in a Java expression are applied the same way as in an arithmetic expression.

14. Java provides the augmented assignment operators += (addition assignment), -= (subtraction assignment),
    *= (multiplication assignment), /= (division assignment) and %= (remainder assignment).

15. The increment operator (++) and the decrement operator (--) increment or decrement a variable by 1.

16. When evaluating an expression with values of mixed types, Java automatically converts the operators to appropriate
    types.

17. You can explicitly convert a value from one type to another using the (type)value notation.

18. Casting a variable of a type with a small range to a type with a larger range is known as widening a type.

19. Casting a variable of a type with a large range to a type with a smaller range is known as narrowing a type.

20. Widening a type can be performed automatically without explicit casting. Narrowing a type must be performed
    explicitly.

21. In computer science, midnight of January 1, 1970, is know as the UNIX epoch.  

//-------------------------------------------------------------------------------------------------------------------//
                                                SUMMARY SELECTIONS
//-------------------------------------------------------------------------------------------------------------------//

1. A boolean-type variable can store a true or false value.

2. The relational operators (<, <=, ==, !=, >, and >=) yield a Boolean value.

3. Selection statements are used for programming with alternative courses of actions. There are several types of
   selection statements: one-way if statements, two-way if-else statements, nested if-statements, multi-way if-else
   statements, switch statements and conditional operators.

4. The various if statements all make control decisions based on a Boolean expression. Based on the true or false
   evaluation of the expression, these statements take one of the two possible courses.

5. The Boolean operators &&, ||, !, and ^ operate with Boolean values and variables.

6. When evaluating p1 && p2, Java first evaluates p1 then evaluates p2 if p1 is true; if p1 is false, it does not
   evaluate p2. When evaluating p1 || p2, Java first evaluates p1 then evaluates p2 if p1 is false; if p1 is true,
   it does not evaluate p2. Therefore, && is referred to as the short-circuit or lazy AND operator, and || is referred
   to as the short-circuit or lazy OR operator.

7. The switch-statement makes control decisions based on a switch expression of type char, byte, short, int, or String.

8. The keyword break is optional in a switch-statement, but it is normally used at the end of each case in order to
   skip the remainder of the switch statement. If the break statement is not present, the next case statement will be
   executed.

9. The operators in expressions are evaluated in the order determined by the rules of parentheses, operator precedence,
   and operator associativity.

10. Parentheses can be used to force the order of evaluation to occur in any sequence.

11. Operators with higher precedence are evaluated earlier. For operators of the same precedence, their associativity
    determines the order of evaluation.

12. All binary operators except assignment operators are left associative; assignment operators are right associative.

//-------------------------------------------------------------------------------------------------------------------//
                                SUMMARY MATHEMATICAL FUNCTIONS , CHARACTERS AND STRINGS
//-------------------------------------------------------------------------------------------------------------------//

1. Java provides the mathematical methods sin, cos, tan, asin, acos, atan, toRadians, toDegrees, exp, log, log10, pow,
   sqrt, ceil, floor, rint, round, min, max, abs, and random in the Math class for performing mathematical functions.

2. The character type char represents a single character.

3. An escape sequence consists of a backslash (\) followed by a character or a combination of digits.

4. The character \ is called the escape character.

5. The characters ' ', \t, \f, \r, and \n are known as the whitespace characters.

6. Characters can be compared based on their Unicode using the relational operators.

7. The Character class contains the methods isDigit, isLetter, isLetterOrDigit, isLowerCaste, and isUpperCase for testing
   whether a character is a digit, letter, lowercase, or uppercase. It also contains the toLowerCase and toUpperCase
   methods for returning a lowercase or uppercase letter.

8. A string is a sequence of characters. A string value is enclosed in matching double quotes ("). A character value is
   enclosed in matching single quotes(').

9. Strings are objects in Java. A method that can only be invoked from a specific object is called an instance method.
   A noninstance method is called a static method, which can be invoked without using an object.

10. You can get the length of a string by invoking its length() method, retrieve a character at the specified index in
    the string using the charAt(index) method, and use the indexOf and lastIndexOf methods to fi nd a character or a
    substring i n a string.

11. You can use the concat method to concatenate two strings or the plus (+) operator to concatenate two or more strings.

12. You can use the substring method to obtain a substring from the string.

13. You can use the equals and compareTo methods to compare strings. The equals method returns true if two strings are
    equal, and false if they are not equal. The compareTo method returns 0, a positive integer, or a negative integer,
    depending on whether one string is equal to, greater than, or less than the other string.

14. The printf method can be used to display a formatted output using format specifiers.

//--------------------------------------------------------------------------------------------------------------------//
